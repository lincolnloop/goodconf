[project]
name = "goodconf"
description = "Load configuration variables from a file or environment"
readme = "README.rst"
requires-python = ">=3.9"
authors = [
    {name = "Peter Baumgartner", email = "brett@python.org"}
]
keywords = ["env", "config", "json", "yaml", "toml"]
license = {file = "LICENSE"}
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dynamic = ["version"]
dependencies = [
    "pydantic>=2.7",
    "pydantic-settings>=2.4",
]

[project.optional-dependencies]
yaml = ["ruamel.yaml>=0.17.0"]
toml = ["tomlkit>=0.11.6"]
tests = [
    "django>=3.2.0",
    "ruamel.yaml>=0.17.0",
    "tomlkit>=0.11.6",
    "pytest==7.2.*",
    "pytest-cov==4.0.*",
    "pytest-mock==3.10.*"
]

[project.urls]
homepage = "https://github.com/lincolnloop/goodconf/"
changelog = "https://github.com/lincolnloop/goodconf/blob/main/CHANGES.rst"

[tool.hatch.build.targets.sdist]
exclude = [
  "/.github",
]

[tool.hatch.build.hooks.vcs]
version-file = "goodconf/_version.py"

[tool.hatch.version]
source = "vcs"

[tool.pytest.ini_options]
addopts = "--cov --cov-branch"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
  "ANN101",   # Missing Type Annotation for "self"
  "ANN401",   # Dynamically typed expressions (typing.Any) are disallowed in `**kwargs`"
  "ARG001",   # Unused function argument (request, ...)
  "ARG002",   # Unused method argument (*args, **kwargs)
  "D",        # Missing or badly formatted docstrings
  "E501",     # Let the formatter handle long lines
  "FBT",      # Flake Boolean Trap (don't use arg=True in functions)
  "RUF012",   # Mutable class attributes https://github.com/astral-sh/ruff/issues/5243

  "COM812",   # (ruff format) Checks for the absence of trailing commas
  "ISC001",   # (ruff format) Checks for implicitly concatenated strings on a single line
]

[tool.ruff.lint.extend-per-file-ignores]
# Also ignore `E402` in all `__init__.py` files.
"test_*.py" = [
  "ANN001",   # Missing type annotation for function argument
  "ANN201",   # Missing return type annotation
  "S101",     # S101 Use of `assert` detected
  "PLR2004",  # Magic value used in comparison,
]

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"
